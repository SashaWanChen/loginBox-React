$easing: cubic-bezier(.5, 0, .5, 1);

*, *:before, *:after {
  transition: all .5s $easing;
  transition-property: transform, opacity, background-color, border-color;
  transition-delay: 0s;
}

@keyframes password-validating {
  0%{
    width:0%;
  }

  50%{
    transform: translateX(10%) scaleX(.5);
    width:80%;
  }


  100% {
    transform: translateX(250%) scaleX(.5);
    width:0%;
  }


}

@keyframes slide-right {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: none;
  }
}

@keyframes icon-error {
  from, 85%, to {
    transform: none;
  }
  20%, 50% {
    transform-origin: right center;
    transform: translateX(-30%) scaleX(1.1);
  }
  35%, 65% {
    transform-origin: left center;
    transform: translateX(30%) scaleX(1.1);
  }
}

@keyframes icon-bg-success {
  from {
    transform: scale(1);
    opacity: .5;
  }
  to {
    transform: scale(4);
    opacity: 0;
  }
}

.uiModal {
  --color-primary: #5A52FF;
  --color-error: #E0294C;
  --color-success: #0DBE65;
  background-color: #fff;
  padding: 4rem 4rem;
  border-radius: .5rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  box-shadow: 0 1rem 2rem rgba(black, 0.1)
}

.uiIcon {
  height: 3rem;
  width: 3rem;
  border-radius: 50%;
  margin-bottom: 1rem;
}
.uiIcon:before {
    content: '';
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: var(--bg);
    will-change: transform;
  }
.uiLock {
  composes:uiIcon;
  height: 100%;
  width: 100%;
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
    
  }
.uiLock:after {
  content: '';
  background-color: var(--color);
  left: 0;
  top: 0;
  height: 25%;
  width: 45%;
  transform: translateY(50%);
  border-radius: 2px;
}
.uiLock:before {
  content: '';
  left: 35%;
  top:25%;
  width: 30%;
  height: 50%;
  border-radius: 1rem;
  border: 4px solid var(--color);
}

.uiTitle {
  font-size: 1rem;
  line-height: 2rem;
}

.uiSubtitle {
  font-size: .75rem;
  height: 1rem;
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #9A9CA2;
}
.uiSubtitle .span {
  line-height: 1rem;
  position: absolute;
  white-space: nowrap;
}

.uiError {
  font-weight: bold;
  color: var(--color-error);
}
.uiPasswordInput {
  padding: 0.4em 0.25em;
  appearance: none;
  background: none;
  border: none;
  height: 2rem;
  width: 15rem;
}
.uiPasswordInput:focus {
    outline: none;
  }

.inputContainer {
  width: 100%;
  position: relative;
  display: flex;
  flex-flow: column-reverse;
  align-items: flex-start;
  margin-bottom: 2rem; }

.inputContainer input {
  order: 10;
  outline: none;
  border: none;
  width: 100%;
  padding: 10px 0;
  border-bottom: 1px solid #d5d5d5;
  text-indent: 10px; 
  }

.inputContainer input:focus ~ div, .inputContainer input:not(:placeholder-shown) ~ div {
  width: 100%; }


 .bottomLine {
  order: 2;
  width: 0;
  height: 2px;
  }

.uiSubmit {
  appearance: none;
  padding: 0 1.5rem;
  height: 2rem;
  border-radius: .5rem;
  font-size: 0.75rem;
  color: white;
}
.uiSubmit:active {
    transform: scale(0.9);
    transition-duration: .2s;
  }
.uiSubmit:focus {
    outline: none;
}
.uiReset {
  appearance: none;
  background: none;
  border: none;
  position: absolute;
  top: 0;
  right: 0;
  padding: 1rem;
}
.uiReset:before {
    content: 'ï½˜';
    color: #AAAFBD;
    font-weight: bold;
    font-size: 1.5rem;
  }
  
.uiReset:focus {
    outline: none;
  }
[data-show] {
  opacity: 0;
  
  &[data-active] {
    opacity: 1;
  }
}



  .uiIcon_idle {
    composes:uiIcon;
    animation: reset 1s $easing both;
    --bg: #E3E6F9;
    --color: var(--color-primary);
  }
  .bottomLine_idle {
    composes:bottomLine;
    background: var(--color-primary);
    transition: all 0.3s; 
  }

  .uiPasswordInput_idle {
    composes:uiPasswordInput;
    animation: reset 1s $easing both;

  }
  .uiSubmit_idle {
    composes:uiSubmit;
    background-color: var(--color-primary);
    animation: reset 1s $easing both;
  }
  .inputContainer_idle{
    composes:inputContainer;
  }


  .uiIcon_validating {
    composes:uiIcon;
    --bg: #E3E6F9;
    --color: var(--color-primary);
  }
  .bottomLine_validating {
    composes:bottomLine;
    background: var(--color-primary);
   
     animation: password-validating 1s infinite;
  }
  .uiPasswordInput_validating {
    composes:uiPasswordInput;
    pointer-events: none;
    cursor: not-allowed;
    opacity: 0.5;

  }
 .inputContainer_validating {
    composes:inputContainer;

  }
  .uiSubmit_validating {
    composes:uiSubmit;
    pointer-events: none;
    cursor: not-allowed;
    background-color: var(--color-primary);
    opacity: .5;

  }


  .uiIcon_error {
    composes:uiIcon;
    background-color: #FAD0D8;
    --color: var(--color-error);
    animation: icon-error 1s cubic-bezier(.5, 0, .5, 1) both;
  }
  .bottomLine_error {
    composes:bottomLine;
    background-color: var(--color-error);
  }
  .inputContainer_error {
    composes:inputContainer;
  }
  .uiPasswordInput_error {
    composes:uiPasswordInput;
    opacity: 0.5;
  }
  .uiSubmit_error {
    composes:uiSubmit;
    background-color: var(--color-error);
  }


  .uiIcon_success {
    composes:uiIcon;
    --color: var(--color-success);
  }
  .uiIcon_success:before {
    background-color:var(--color-success);
    animation: icon-bg-success .5s ease-out both;
    }
  .bottomLine_sucess {
    composes:bottomLine;
    background: var(--color-primary);
  }
  .uiPasswordInput_success {
    composes:uiPasswordInput;
    pointer-events: none;
    cursor: not-allowed;
  }
  .inputContainer_success {
    composes:inputContainer;
  }
  .uiSubmit_success {
    composes:uiSubmit;
    pointer-events: none;
    cursor: not-allowed;
    background-color: var(--color-success);
 
  }


body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #CED0E0;
}

html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  font-size: 18px;
}

*, *:before, *:after {
  box-sizing: border-box;
  position: relative;
}